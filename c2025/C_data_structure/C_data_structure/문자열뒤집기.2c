//#define _CRT_SECURE_NO_WARNINGS //strcpy()
//#include <stdio.h>
//#include <stdlib.h>
//#include <string.h>
//
//#define MAX_WORDS 100  //스택의 크기
//#define MAX_LEN 100    //문자열의 크기
//
//char* stack[MAX_WORDS]; //포인터 배열 생성
//int top = -1;
//
//// 문자열 복사
//char* my_strdup(const char* s) {
//    char* p = malloc(strlen(s) + 1);
//    if (p) strcpy(p, s);
//    return p;
//}
//
//void push(char* word) {
//    if (top >= MAX_WORDS - 1) {
//        printf("스택이 가득 찼습니다.\n");
//        return;
//    }
//    stack[++top] = my_strdup(word); // 문자열 복사
//}
//
//char* pop() {
//    if (top < 0) {
//        return NULL;
//    }
//    return stack[top--];
//}
//
//int main() {
//
//    char str[MAX_LEN];
//    char* token; //문자열 분리
//    char* word;  //꺼낸 문자
//
//    printf("문장 입력: ");
//    fgets(str, MAX_LEN, stdin);
//    str[strcspn(str, "\n")] = '\0'; // 줄바꿈 제거
//
//    token = strtok(str, " "); // 공백 구분
//    while (token != NULL) {
//        push(token);
//        token = strtok(NULL, " \t");
//    }
//
//    printf("단어 순서 뒤집기: ");
//    while (top >= 0) {
//        word = pop();
//        printf("%s ", word);
//        free(word); // 메모리 해제
//    }
//
//    printf("\n");
//
//    return 0;
//}
